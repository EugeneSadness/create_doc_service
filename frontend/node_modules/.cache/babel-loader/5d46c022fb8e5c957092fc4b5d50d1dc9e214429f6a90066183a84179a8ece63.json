{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nexport const projectsApi = {\n  getProjects: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/projects`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      throw error;\n    }\n  },\n  getProject: async id => {\n    try {\n      const response = await axios.get(`${API_URL}/projects/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching project ${id}:`, error);\n      throw error;\n    }\n  },\n  createProject: async projectData => {\n    try {\n      const response = await axios.post(`${API_URL}/projects`, projectData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating project:', error);\n      throw error;\n    }\n  },\n  generateDocumentation: async projectId => {\n    try {\n      const response = await axios.post(`${API_URL}/projects/${projectId}/generate`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error generating documentation for project ${projectId}:`, error);\n      throw error;\n    }\n  },\n  getDocumentation: async projectId => {\n    try {\n      const response = await axios.get(`${API_URL}/projects/${projectId}/documentation`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching documentation for project ${projectId}:`, error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","projectsApi","getProjects","response","get","data","error","console","getProject","id","createProject","projectData","post","generateDocumentation","projectId","getDocumentation"],"sources":["/home/eugene/web_labs/create_doc_service/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\nexport const projectsApi = {\n  getProjects: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/projects`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching projects:', error);\n      throw error;\n    }\n  },\n  \n  getProject: async (id) => {\n    try {\n      const response = await axios.get(`${API_URL}/projects/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching project ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  createProject: async (projectData) => {\n    try {\n      const response = await axios.post(`${API_URL}/projects`, projectData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating project:', error);\n      throw error;\n    }\n  },\n  \n  generateDocumentation: async (projectId) => {\n    try {\n      const response = await axios.post(`${API_URL}/projects/${projectId}/generate`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error generating documentation for project ${projectId}:`, error);\n      throw error;\n    }\n  },\n  \n  getDocumentation: async (projectId) => {\n    try {\n      const response = await axios.get(`${API_URL}/projects/${projectId}/documentation`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching documentation for project ${projectId}:`, error);\n      throw error;\n    }\n  }\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAE5E,OAAO,MAAMC,WAAW,GAAG;EACzBC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,WAAW,CAAC;MACvD,OAAOM,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF,CAAC;EAEDE,UAAU,EAAE,MAAOC,EAAE,IAAK;IACxB,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,aAAaY,EAAE,EAAE,CAAC;MAC7D,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0BG,EAAE,GAAG,EAAEH,KAAK,CAAC;MACrD,MAAMA,KAAK;IACb;EACF,CAAC;EAEDI,aAAa,EAAE,MAAOC,WAAW,IAAK;IACpC,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMP,KAAK,CAACgB,IAAI,CAAC,GAAGf,OAAO,WAAW,EAAEc,WAAW,CAAC;MACrE,OAAOR,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDO,qBAAqB,EAAE,MAAOC,SAAS,IAAK;IAC1C,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMP,KAAK,CAACgB,IAAI,CAAC,GAAGf,OAAO,aAAaiB,SAAS,WAAW,CAAC;MAC9E,OAAOX,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8CAA8CQ,SAAS,GAAG,EAAER,KAAK,CAAC;MAChF,MAAMA,KAAK;IACb;EACF,CAAC;EAEDS,gBAAgB,EAAE,MAAOD,SAAS,IAAK;IACrC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,aAAaiB,SAAS,gBAAgB,CAAC;MAClF,OAAOX,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4CAA4CQ,SAAS,GAAG,EAAER,KAAK,CAAC;MAC9E,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}