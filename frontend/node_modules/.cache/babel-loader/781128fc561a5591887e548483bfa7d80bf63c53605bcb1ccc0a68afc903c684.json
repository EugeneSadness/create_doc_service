{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\nconst api = axios.create({\n  baseURL: API_URL\n});\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const projectsApi = {\n  getProjects: async () => {\n    try {\n      console.log('API: Отправляем запрос на получение списка проектов...');\n      console.log('API: Токен авторизации:', localStorage.getItem('token'));\n      console.log('API: Заголовки запроса:', api.defaults.headers);\n      const response = await api.get('/projects');\n      console.log('API: Получен ответ:', response);\n      return response.data;\n    } catch (error) {\n      console.error('API: Error fetching projects:', error);\n      throw error;\n    }\n  },\n  getProject: async id => {\n    try {\n      const response = await api.get(`/projects/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching project ${id}:`, error);\n      throw error;\n    }\n  },\n  createProject: async projectData => {\n    try {\n      console.log('Отправляем запрос на создание проекта:', projectData);\n      const response = await api.post('/projects', projectData);\n      console.log('Ответ от сервера:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating project:', error);\n      throw error;\n    }\n  },\n  generateDocumentation: async projectId => {\n    try {\n      const response = await api.post(`/projects/${projectId}/generate-docs`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error generating documentation for project ${projectId}:`, error);\n      throw error;\n    }\n  },\n  getDocumentation: async projectId => {\n    try {\n      console.log(`Отправляем запрос на получение документации для проекта ${projectId}...`);\n      const response = await api.get(`/projects/${projectId}/documentation`);\n      console.log(`Получен ответ:`, response);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching documentation for project ${projectId}:`, error);\n      throw error;\n    }\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","projectsApi","getProjects","console","log","defaults","response","get","data","error","getProject","id","createProject","projectData","post","generateDocumentation","projectId","getDocumentation"],"sources":["/home/eugene/web_labs/create_doc_service/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n});\n\napi.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\nexport const projectsApi = {\n  getProjects: async () => {\n    try {\n      console.log('API: Отправляем запрос на получение списка проектов...');\n      console.log('API: Токен авторизации:', localStorage.getItem('token'));\n      console.log('API: Заголовки запроса:', api.defaults.headers);\n      const response = await api.get('/projects');\n      console.log('API: Получен ответ:', response);\n      return response.data;\n    } catch (error) {\n      console.error('API: Error fetching projects:', error);\n      throw error;\n    }\n  },\n  \n  getProject: async (id) => {\n    try {\n      const response = await api.get(`/projects/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching project ${id}:`, error);\n      throw error;\n    }\n  },\n  \n  createProject: async (projectData) => {\n    try {\n      console.log('Отправляем запрос на создание проекта:', projectData);\n      const response = await api.post('/projects', projectData);\n      console.log('Ответ от сервера:', response.data);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating project:', error);\n      throw error;\n    }\n  },\n  \n  generateDocumentation: async (projectId) => {\n    try {\n      const response = await api.post(`/projects/${projectId}/generate-docs`);\n      return response.data;\n    } catch (error) {\n      console.error(`Error generating documentation for project ${projectId}:`, error);\n      throw error;\n    }\n  },\n  \n  getDocumentation: async (projectId) => {\n    try {\n      console.log(`Отправляем запрос на получение документации для проекта ${projectId}...`);\n      const response = await api.get(`/projects/${projectId}/documentation`);\n      console.log(`Получен ответ:`, response);\n      return response.data;\n    } catch (error) {\n      console.error(`Error fetching documentation for project ${projectId}:`, error);\n      throw error;\n    }\n  }\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}